layout: docs/dev.twig
---
<div class="well">
  <h3>Controllers</h3>
  <p>
    Controllers are the heart of userland code. They are simple classes that have there methods (<em>actions</em>) mapped to be the <a href="/docs/dev/route-component.html">Routing</a>. Typically this means a
    url such as /hello will map to your <em>Index</em> Controller's <em>helloAction()</em> method.
  </p>
</div>
<div class="well">
  <h3>Creating a controller</h3>
  <p>
    Controllers are simple to create. Within Proem, all controllers extend the <a href="https://github.com/proem/proem/blob/develop/lib/Proem/Controller/Standard.php">Proem\Controller\Standard</a> object.
  </p>
  <pre class="prettyprint">
    class Index extends Proem\Controller\Standard
    {
        public function indexAction()
        {

        }
    }
  </pre>
  <p>
    Controllers are automatically passed Proem's <a href="/docs/dev/services-component.html">Service Manager</a> which can be accessed via the property <em>$this->assets</em> and by default contains
    the <em>Request, Response, Dispatch</em> and <em>Router</em> objects as well as the <a href="/docs/dev/signal-component.html">Signal Manager</a>.
  </p>
  <pre class="prettyprint">
    class Index extends Proem\Controller\Standard
    {
        public function indexAction()
        {
            $this->assets->get('response')
                ->apendToBody('This is Index');
        }
    }
  </pre>
</div>
<div class="well">
  <h3>Setting up and Tearing down</h3>
  <p>
    Sometimes you might want to setup some infrastructure as an <em>action</em> is called. This could be stuff like database connections, reading config files, whatever.
  </p>
  <p>
    When a <em>controller</em> is instantiated, an <em>init</em> method is called. It is this method we can use to setup whatever we need.
  </p>
  <pre class="prettyprint">
    class Index extends Proem\Controller\Standard
    {
        private $db;

        public function init()
        {
            $this->db = new SomeDBA;
        }
    }
  </pre>
  <p>
    There are also two <a href="/docs/dev/signal-component.html">events</a> triggered when an action is called. The <em>proem.pre.action.*</em> and <em>proem.post.action.*</em> events. Where the *
    is the <em>action</em> being called. You can setup listeners for these events wherever you like, however, you might often setup these listeners within the actual controller itself.
  </p>
  <pre class="prettyprint">
    class Index extends Proem\Controller\Standard
    {
        private $db;

        public function init()
        {
            $this->assets->get('events')->attach('proem.pre.action.foo', [$this, 'fooListener']);
        }

        public function fooListener()
        {
            $this->db = new SomeDBA;
        }
    }
  </pre>
  <div class="alert alert-info">
    <p>
      There is also work planned on adding <a href="https://github.com/proem/proem/issues/121">True namespacing</a> to events which will make these listeners much more flexible in that they won't need to be tied to
      a particular action. eg;
    </p>
    <pre class="prettyprint">
      class Index extends Proem\Controller\Standard
      {
          private $db;

          public function init()
          {
              $this->assets->get('events')->attach('proem.pre.action.*', [$this, 'dbLoader']);
          }

          public function dbLoader()
          {
              $this->db = new SomeDBA;
          }
      }
    </pre>
  </div>
</div>
<div class="well" id="disqus_thread"></div>
<script type="text/javascript">
  var disqus_identifier = '/docs/dev/controllers';
  (function() {
      var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
      dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
      (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
  })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
